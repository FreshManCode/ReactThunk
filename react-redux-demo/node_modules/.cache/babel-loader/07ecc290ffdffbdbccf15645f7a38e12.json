{"ast":null,"code":"var _jsxFileName = \"/Users/zhangjunjun/Git/My_H5/Redux\\u5B66\\u4E60/react-redux-demo/src/pages/ComA/index.js\";\nimport React from 'react';\n// 导入connect\nimport { connect } from 'react-redux';\n\n// ComA 发送action\n// 1.导入connect\n\n// 2.利用对connect 对组件进行加强\n//   connect(要接收数据的函数,要发送action的函数)(放入要加强的组件)\n\n// 3.实现connect 第二个参数\n\n// 4.构建一个函数mapDispatchToProps(dispatch)\n//   dispatch:就是用来发送action的\n\n// 5.在这个函数里面就可以返回一个对象\n//   key:方法名\n//   value:调用dispatch去发送action\n\n// 6.在组件的内部 就可以通过this.props来获取这个方法\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass ComA extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.handleClick = () => {\n      console.log('click:', this.props);\n      // 通过this.props 调用,发送action\n      this.props.sendAction();\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coma\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleClick,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n/**\n * 函数要有一个返回值,返回值是一个对象\n * @param {*} dispatch \n */\nconst mapDispatchToProps = dispatch => {\n  // 返回值是一个对象\n  return {\n    sendAction: () => {\n      // 利用dispatch 发送一个action\n      // 传递action对象,需要定义一个type属性\n      dispatch({\n        type: \"add_action\"\n      });\n    }\n  };\n};\n\n// A 是发送方,所以要实现connect 第二个参数\n// connect 函数返回值是加强之后的组件\nexport default connect(null, mapDispatchToProps)(ComA);","map":{"version":3,"names":["React","connect","ComA","Component","handleClick","console","log","props","sendAction","render","mapDispatchToProps","dispatch","type"],"sources":["/Users/zhangjunjun/Git/My_H5/Redux学习/react-redux-demo/src/pages/ComA/index.js"],"sourcesContent":["import React from 'react'\n// 导入connect\nimport {connect} from 'react-redux'\n\n// ComA 发送action\n// 1.导入connect\n\n// 2.利用对connect 对组件进行加强\n//   connect(要接收数据的函数,要发送action的函数)(放入要加强的组件)\n\n// 3.实现connect 第二个参数\n\n// 4.构建一个函数mapDispatchToProps(dispatch)\n//   dispatch:就是用来发送action的\n\n// 5.在这个函数里面就可以返回一个对象\n//   key:方法名\n//   value:调用dispatch去发送action\n\n// 6.在组件的内部 就可以通过this.props来获取这个方法\n\n\n class ComA extends React.Component{\n\n    handleClick=()=>{\n        console.log('click:',this.props);\n        // 通过this.props 调用,发送action\n        this.props.sendAction();\n    }\n\n\n    render(){\n        return <div className='coma'><button onClick={this.handleClick}>+</button></div>\n    }\n}\n\n/**\n * 函数要有一个返回值,返回值是一个对象\n * @param {*} dispatch \n */\nconst mapDispatchToProps = (dispatch)=>{\n    // 返回值是一个对象\n    return {\n        sendAction:()=>{\n            // 利用dispatch 发送一个action\n            // 传递action对象,需要定义一个type属性\n            dispatch({\n                type:\"add_action\"\n            })\n        }\n\n    }\n}\n\n\n// A 是发送方,所以要实现connect 第二个参数\n// connect 函数返回值是加强之后的组件\nexport default connect(null,mapDispatchToProps)(ComA)"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAAQC,OAAO,QAAO,aAAa;;AAEnC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AAAA;AAGC,MAAMC,IAAI,SAASF,KAAK,CAACG,SAAS;EAAA;IAAA;IAAA,KAE/BC,WAAW,GAAC,MAAI;MACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAC,IAAI,CAACC,KAAK,CAAC;MAChC;MACA,IAAI,CAACA,KAAK,CAACC,UAAU,EAAE;IAC3B,CAAC;EAAA;EAGDC,MAAM,GAAE;IACJ,oBAAO;MAAK,SAAS,EAAC,MAAM;MAAA,uBAAC;QAAQ,OAAO,EAAE,IAAI,CAACL,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM;EACpF;AACJ;;AAEA;AACA;AACA;AACA;AACA,MAAMM,kBAAkB,GAAIC,QAAQ,IAAG;EACnC;EACA,OAAO;IACHH,UAAU,EAAC,MAAI;MACX;MACA;MACAG,QAAQ,CAAC;QACLC,IAAI,EAAC;MACT,CAAC,CAAC;IACN;EAEJ,CAAC;AACL,CAAC;;AAGD;AACA;AACA,eAAeX,OAAO,CAAC,IAAI,EAACS,kBAAkB,CAAC,CAACR,IAAI,CAAC"},"metadata":{},"sourceType":"module"}