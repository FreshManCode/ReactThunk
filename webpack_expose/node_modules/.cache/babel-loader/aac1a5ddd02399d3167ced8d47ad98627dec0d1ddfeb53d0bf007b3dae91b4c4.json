{"ast":null,"code":"import qs from 'qs';\nimport axios from 'axios';\naxios.defaults.withCredentials = true;\n\n// 发送时\naxios.interceptors.request.use(config => config, error => Promise.reject(error));\n\n// 响应时\naxios.interceptors.response.use(response => response, error => Promise.resolve(error.response));\nconst checkStatus = res => {\n  if (res.status === 200 || res.status === 304) {\n    return res.data;\n  }\n  return {\n    code: 0,\n    msg: res.statusText,\n    data: res.statusText\n  };\n};\nconst checkCode = res => {\n  if (res.code == 0) {\n    throw new Error(res.ms);\n  }\n  return res;\n};\nconst prefix = \"/api\";\nconst get = (url, params) => {\n  return axios({\n    method: 'get',\n    url: prefix + url,\n    params,\n    timeout: 30000\n  }).then(checkStatus).then(checkCode);\n};\nconst post = (url, data) => {\n  return axios({\n    method: 'get',\n    url: prefix + url,\n    data: qs.stringify(data),\n    timeout: 30000\n  }).then(checkStatus).then(checkCode);\n};\nexport { get, post };","map":{"version":3,"names":["qs","axios","defaults","withCredentials","interceptors","request","use","config","error","Promise","reject","response","resolve","checkStatus","res","status","data","code","msg","statusText","checkCode","Error","ms","prefix","get","url","params","method","timeout","then","post","stringify"],"sources":["/Users/zhangjunjun/Git/My_H5/ReactThunk/webpack_expose/src/utils/callAPI.js"],"sourcesContent":["import qs from 'qs'\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true;\n\n// 发送时\naxios.interceptors.request.use(\n    (config)=>config,\n    (error)=>Promise.reject(error)\n);\n\n// 响应时\naxios.interceptors.response.use(\n    (response)=>response,\n    (error)=>Promise.resolve(error.response)\n);\n\nconst checkStatus = (res)=>{\n    if (res.status === 200 || res.status === 304) {\n        return res.data\n    }\n    return {\n        code:0,\n        msg:res.statusText,\n        data:res.statusText\n    }\n}\n\nconst checkCode = (res)=>{\n    if (res.code == 0) {\n        throw new Error(res.ms)\n    }\n    return res;\n}\n\nconst prefix = \"/api\";\nconst get = (url, params) => {\n    return axios({\n      method: 'get',\n      url: prefix + url,\n      params,\n      timeout: 30000,\n    })\n      .then(checkStatus)\n      .then(checkCode);\n  };\n  \n  const post = (url, data) => {\n    return axios({\n      method: 'get',\n      url: prefix + url,\n      data: qs.stringify(data),\n      timeout: 30000,\n    })\n      .then(checkStatus)\n      .then(checkCode);\n};\n  \nexport {\n    get,\n    post,\n};\n  "],"mappings":"AAAA,OAAOA,EAAE,MAAM,IAAI;AACnB,OAAOC,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,GAAG,IAAI;;AAErC;AACAF,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAGA,MAAM,EACfC,KAAK,IAAGC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACAP,KAAK,CAACG,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAGA,QAAQ,EACnBH,KAAK,IAAGC,OAAO,CAACG,OAAO,CAACJ,KAAK,CAACG,QAAQ,CAC3C,CAAC;AAED,MAAME,WAAW,GAAIC,GAAG,IAAG;EACvB,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,IAAID,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;IAC1C,OAAOD,GAAG,CAACE,IAAI;EACnB;EACA,OAAO;IACHC,IAAI,EAAC,CAAC;IACNC,GAAG,EAACJ,GAAG,CAACK,UAAU;IAClBH,IAAI,EAACF,GAAG,CAACK;EACb,CAAC;AACL,CAAC;AAED,MAAMC,SAAS,GAAIN,GAAG,IAAG;EACrB,IAAIA,GAAG,CAACG,IAAI,IAAI,CAAC,EAAE;IACf,MAAM,IAAII,KAAK,CAACP,GAAG,CAACQ,EAAE,CAAC;EAC3B;EACA,OAAOR,GAAG;AACd,CAAC;AAED,MAAMS,MAAM,GAAG,MAAM;AACrB,MAAMC,GAAG,GAAGA,CAACC,GAAG,EAAEC,MAAM,KAAK;EACzB,OAAOzB,KAAK,CAAC;IACX0B,MAAM,EAAE,KAAK;IACbF,GAAG,EAAEF,MAAM,GAAGE,GAAG;IACjBC,MAAM;IACNE,OAAO,EAAE;EACX,CAAC,CAAC,CACCC,IAAI,CAAChB,WAAW,CAAC,CACjBgB,IAAI,CAACT,SAAS,CAAC;AACpB,CAAC;AAED,MAAMU,IAAI,GAAGA,CAACL,GAAG,EAAET,IAAI,KAAK;EAC1B,OAAOf,KAAK,CAAC;IACX0B,MAAM,EAAE,KAAK;IACbF,GAAG,EAAEF,MAAM,GAAGE,GAAG;IACjBT,IAAI,EAAEhB,EAAE,CAAC+B,SAAS,CAACf,IAAI,CAAC;IACxBY,OAAO,EAAE;EACX,CAAC,CAAC,CACCC,IAAI,CAAChB,WAAW,CAAC,CACjBgB,IAAI,CAACT,SAAS,CAAC;AACtB,CAAC;AAED,SACII,GAAG,EACHM,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}