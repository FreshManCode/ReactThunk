{"ast":null,"code":"var _jsxFileName = \"/Users/zhangjunjun/Git/My_H5/ReactThunk/webpack_expose/src/pages/MockJs/index.js\";\nimport React from 'react';\nimport './index.scss';\nimport { objctData, userInfo } from './mockData';\nimport { Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass MockJS extends React.Component {\n  constructor(props) {\n    super(props);\n    this.testMockJS1 = () => {\n      this.setState({\n        showText: JSON.stringify(objctData)\n      });\n      console.log('objctData:', objctData, 'jsonData:', JSON.stringify(objctData));\n    };\n    this.testMockJS2 = () => {\n      this.setState({\n        showText: JSON.stringify(userInfo)\n      });\n      console.log('userInfo:', userInfo, 'jsonData:', JSON.stringify(userInfo));\n    };\n    this.coptTest = () => {\n      var link = \"https://blog.csdn.net/FreshManCode/article/details/116498154?spm=1001.2014.3001.5502\";\n      const input = document.createElement('input');\n      document.body.appendChild(input);\n      input.setAttribute('value', link);\n      input.select();\n      if (document.execCommand('copy')) {\n        document.execCommand('copy');\n        alert('复制链接成功');\n      }\n      document.body.removeChild(input);\n    };\n    this.state = {\n      name: \"test\",\n      age: \"libai\",\n      showText: ''\n    };\n  }\n\n  // 需要一个对象格式的返回值 这是一个静态方法\n  static getDerivedStateFromProps(props, state) {\n    console.log('super_getDerivedStateFromProps', props);\n    return null;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"MockJS\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"MockJS\\u6D4B\\u8BD5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentWrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          onClick: this.testMockJS1,\n          children: \"\\u6D4B\\u8BD5MockJS1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          onClick: this.testMockJS2,\n          children: \"\\u6D4B\\u8BD5MockJS2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"button\",\n          onClick: this.coptTest,\n          children: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ShowTextChild, {\n        showText: this.state.showText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n}\nexport default MockJS;\nclass ShowTextChild extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newText: \"我想去桂林\"\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    console.log('getDerivedStateFromProps:', props, '\\nstate:', state);\n    const text = props.showText ? props.showText : '';\n    return {\n      showText: text,\n      newText: text.length > 2 ? text.slice(0, text.length / 2) : '我想去桂林'\n    };\n  }\n\n  // 替代  componentWillUpdate\n  getSnapshotBeforeUpdate(preProps, preState) {\n    console.log('getSnapshotBeforeUpdate');\n    return \"哈哈\";\n  }\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n  render() {\n    const {\n      showText\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showTextChildWrapper\",\n      children: [showText, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.newText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }, this);\n  }\n}","map":{"version":3,"names":["React","objctData","userInfo","Button","MockJS","Component","constructor","props","testMockJS1","setState","showText","JSON","stringify","console","log","testMockJS2","coptTest","link","input","document","createElement","body","appendChild","setAttribute","select","execCommand","alert","removeChild","state","name","age","getDerivedStateFromProps","render","ShowTextChild","newText","text","length","slice","getSnapshotBeforeUpdate","preProps","preState","componentDidUpdate"],"sources":["/Users/zhangjunjun/Git/My_H5/ReactThunk/webpack_expose/src/pages/MockJs/index.js"],"sourcesContent":["import React from 'react'\nimport './index.scss'\nimport {objctData,userInfo} from './mockData'\nimport {Button} from 'antd'\n\nclass MockJS extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            name:\"test\",\n            age:\"libai\",\n            showText:'',\n        }\n    }\n\n\n    // 需要一个对象格式的返回值 这是一个静态方法\n    static getDerivedStateFromProps(props,state) {\n        console.log('super_getDerivedStateFromProps',props);\n        return null\n    }\n\n    testMockJS1 = ()=>{\n        this.setState({\n            showText:JSON.stringify(objctData)\n        })\n        console.log('objctData:',objctData,'jsonData:',JSON.stringify(objctData));\n    }\n\n    testMockJS2 = ()=>{\n        this.setState({\n            showText:JSON.stringify(userInfo)\n        })\n        console.log('userInfo:',userInfo,'jsonData:',JSON.stringify(userInfo));\n    }\n\n    coptTest = ()=>{\n        var link = \"https://blog.csdn.net/FreshManCode/article/details/116498154?spm=1001.2014.3001.5502\" ;\n            const input = document.createElement('input');\n            document.body.appendChild(input);\n            input.setAttribute('value', link);\n            input.select();\n            if (document.execCommand('copy')) {\n                document.execCommand('copy');\n                alert('复制链接成功')\n            }\n            document.body.removeChild(input);\n\n    }\n\n\n    render() {\n        return <div className='MockJS'>\n                <h3>MockJS测试</h3>\n                <div className='contentWrapper'>\n                    <Button className='button' onClick={this.testMockJS1}>测试MockJS1</Button>\n                    <Button className='button' onClick={this.testMockJS2}>测试MockJS2</Button>\n                    <Button className=\"button\" onClick={this.coptTest}>copy</Button>\n                    \n                </div>\n               <ShowTextChild showText={this.state.showText}></ShowTextChild>\n        </div>\n    }\n}\nexport default MockJS;\n\n\nclass ShowTextChild extends React.Component{\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            newText:\"我想去桂林\",\n\n        }\n    }\n\n    static getDerivedStateFromProps(props,state) {\n        console.log('getDerivedStateFromProps:',props,'\\nstate:',state)\n        const text = props.showText ? props.showText : ''\n        return {\n            showText:text,\n            newText:text.length > 2 ? text.slice(0,text.length/2) : '我想去桂林'\n        }\n        \n    }\n\n\n\n    // 替代  componentWillUpdate\n    getSnapshotBeforeUpdate(preProps,preState) {\n        console.log('getSnapshotBeforeUpdate')\n        return \"哈哈\"\n\n    }\n\n    componentDidUpdate() {\n        console.log('componentDidUpdate');\n    }\n\n    render(){\n        const {showText} = this.props\n        return <div className=\"showTextChildWrapper\">\n            {showText}\n            <p>\n                {this.state.newText}\n            </p>\n        </div>\n    }\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAAQC,SAAS,EAACC,QAAQ,QAAO,YAAY;AAC7C,SAAQC,MAAM,QAAO,MAAM;AAAA;AAE3B,MAAMC,MAAM,SAASJ,KAAK,CAACK,SAAS,CAAC;EAEjCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IAAA,KAehBC,WAAW,GAAG,MAAI;MACd,IAAI,CAACC,QAAQ,CAAC;QACVC,QAAQ,EAACC,IAAI,CAACC,SAAS,CAACX,SAAS;MACrC,CAAC,CAAC;MACFY,OAAO,CAACC,GAAG,CAAC,YAAY,EAACb,SAAS,EAAC,WAAW,EAACU,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC,CAAC;IAC7E,CAAC;IAAA,KAEDc,WAAW,GAAG,MAAI;MACd,IAAI,CAACN,QAAQ,CAAC;QACVC,QAAQ,EAACC,IAAI,CAACC,SAAS,CAACV,QAAQ;MACpC,CAAC,CAAC;MACFW,OAAO,CAACC,GAAG,CAAC,WAAW,EAACZ,QAAQ,EAAC,WAAW,EAACS,IAAI,CAACC,SAAS,CAACV,QAAQ,CAAC,CAAC;IAC1E,CAAC;IAAA,KAEDc,QAAQ,GAAG,MAAI;MACX,IAAIC,IAAI,GAAG,sFAAsF;MAC7F,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;MAC7CD,QAAQ,CAACE,IAAI,CAACC,WAAW,CAACJ,KAAK,CAAC;MAChCA,KAAK,CAACK,YAAY,CAAC,OAAO,EAAEN,IAAI,CAAC;MACjCC,KAAK,CAACM,MAAM,EAAE;MACd,IAAIL,QAAQ,CAACM,WAAW,CAAC,MAAM,CAAC,EAAE;QAC9BN,QAAQ,CAACM,WAAW,CAAC,MAAM,CAAC;QAC5BC,KAAK,CAAC,QAAQ,CAAC;MACnB;MACAP,QAAQ,CAACE,IAAI,CAACM,WAAW,CAACT,KAAK,CAAC;IAExC,CAAC;IAxCG,IAAI,CAACU,KAAK,GAAG;MACTC,IAAI,EAAC,MAAM;MACXC,GAAG,EAAC,OAAO;MACXpB,QAAQ,EAAC;IACb,CAAC;EACL;;EAGA;EACA,OAAOqB,wBAAwB,CAACxB,KAAK,EAACqB,KAAK,EAAE;IACzCf,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAACP,KAAK,CAAC;IACnD,OAAO,IAAI;EACf;EA+BAyB,MAAM,GAAG;IACL,oBAAO;MAAK,SAAS,EAAC,QAAQ;MAAA,wBACtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB,eACjB;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC3B,QAAC,MAAM;UAAC,SAAS,EAAC,QAAQ;UAAC,OAAO,EAAE,IAAI,CAACxB,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACxE,QAAC,MAAM;UAAC,SAAS,EAAC,QAAQ;UAAC,OAAO,EAAE,IAAI,CAACO,WAAY;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAmB,eACxE,QAAC,MAAM;UAAC,SAAS,EAAC,QAAQ;UAAC,OAAO,EAAE,IAAI,CAACC,QAAS;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QAE9D,eACP,QAAC,aAAa;QAAC,QAAQ,EAAE,IAAI,CAACY,KAAK,CAAClB;MAAS;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/D;EACV;AACJ;AACA,eAAeN,MAAM;AAGrB,MAAM6B,aAAa,SAASjC,KAAK,CAACK,SAAS;EAEvCC,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACqB,KAAK,GAAG;MACTM,OAAO,EAAC;IAEZ,CAAC;EACL;EAEA,OAAOH,wBAAwB,CAACxB,KAAK,EAACqB,KAAK,EAAE;IACzCf,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACP,KAAK,EAAC,UAAU,EAACqB,KAAK,CAAC;IAC/D,MAAMO,IAAI,GAAG5B,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,GAAG,EAAE;IACjD,OAAO;MACHA,QAAQ,EAACyB,IAAI;MACbD,OAAO,EAACC,IAAI,CAACC,MAAM,GAAG,CAAC,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,EAACF,IAAI,CAACC,MAAM,GAAC,CAAC,CAAC,GAAG;IAC5D,CAAC;EAEL;;EAIA;EACAE,uBAAuB,CAACC,QAAQ,EAACC,QAAQ,EAAE;IACvC3B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,OAAO,IAAI;EAEf;EAEA2B,kBAAkB,GAAG;IACjB5B,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC;EAEAkB,MAAM,GAAE;IACJ,MAAM;MAACtB;IAAQ,CAAC,GAAG,IAAI,CAACH,KAAK;IAC7B,oBAAO;MAAK,SAAS,EAAC,sBAAsB;MAAA,WACvCG,QAAQ,eACT;QAAA,UACK,IAAI,CAACkB,KAAK,CAACM;MAAO;QAAA;QAAA;QAAA;MAAA,QACnB;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EACV;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}