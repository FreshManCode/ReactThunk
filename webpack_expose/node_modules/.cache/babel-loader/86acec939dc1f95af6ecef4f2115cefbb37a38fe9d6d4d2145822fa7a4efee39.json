{"ast":null,"code":"var _jsxFileName = \"/Users/zhangjunjun/Git/My_H5/ReactThunk/webpack_expose/src/pages/MockJs/FunctionChild/FunctionOne.js\",\n  _s = $RefreshSig$();\n// 使用useState Hooks 函数式组件编程\nimport React, { useState, useEffect } from \"react\";\nimport \"./FunctionOne.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FunctionOne() {\n  _s();\n  // 仅在挂载阶段执行一次的副作用:\n\n  // 传入回调函数,且这个回调函数的返回值不是一个函数,同时传入一个空数组\n  // useEffect(()=>{\n  //     // 业务逻辑\n  // },[])\n\n  // 仅在挂载阶段和卸载阶段执行的副作用:\n\n  // 传入回调函数,且这个函数的返回值是一个函数,同时传入一个空数组\n  // useEffect回调中返回的函数被称为 \"清除函数\"\n  // useEffect(()=>{\n  //     // 业务逻辑A(挂载阶段执行)\n  //     return ()=>{\n  //         // 返回函数记为B(卸载阶段执行)\n  //     }\n  // },[])\n\n  // 每一次渲染都触发,且卸载阶段也会被触发的副作用:\n\n  // 传入回调函数,且这个函数的返回值是一个函数,同时不传第二个参数\n  // useEffect(()=>{\n  //     // 业务逻辑A (每次渲染都会触发)\n\n  //     // 返回一个函数记为B (卸载阶段)\n  //     return ()=>{\n  //     }\n  // })\n\n  // 根据一定的依赖条件来触发的副作用:传入回调函数,同时传入一个非空的数组\n  // useEffect(()=>{\n  //     // 这是回调函数的业务逻辑\n  //     // 若xxx 是一个函数,则xxx会在组件卸载的时候触发\n  //     return xxx\n\n  // },[\"\",\"\",\"\"])\n\n  // useState 关联了一个状态\n  const [text, setText] = useState(\"初始文本\");\n  function changeText() {\n    setText(\"使用setText更改文本\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"functionOne\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeText,\n      children: \"\\u70B9\\u6211\\u6709\\u60CA\\u559C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 12\n  }, this);\n}\n_s(FunctionOne, \"xvVq8Zi8r8ieAL1eqkKyr7BT/fk=\");\n_c = FunctionOne;\nvar _c;\n$RefreshReg$(_c, \"FunctionOne\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FunctionOne","_s","text","setText","changeText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/zhangjunjun/Git/My_H5/ReactThunk/webpack_expose/src/pages/MockJs/FunctionChild/FunctionOne.js"],"sourcesContent":["// 使用useState Hooks 函数式组件编程\nimport React,{useState,useEffect} from \"react\";\nimport \"./FunctionOne.scss\"\n\nexport default function FunctionOne() {\n    // 仅在挂载阶段执行一次的副作用:\n\n    // 传入回调函数,且这个回调函数的返回值不是一个函数,同时传入一个空数组\n    // useEffect(()=>{\n    //     // 业务逻辑\n    // },[])\n\n\n    // 仅在挂载阶段和卸载阶段执行的副作用:\n\n    // 传入回调函数,且这个函数的返回值是一个函数,同时传入一个空数组\n    // useEffect回调中返回的函数被称为 \"清除函数\"\n    // useEffect(()=>{\n    //     // 业务逻辑A(挂载阶段执行)\n    //     return ()=>{\n    //         // 返回函数记为B(卸载阶段执行)\n    //     }\n    // },[])\n\n    // 每一次渲染都触发,且卸载阶段也会被触发的副作用:\n\n    // 传入回调函数,且这个函数的返回值是一个函数,同时不传第二个参数\n    // useEffect(()=>{\n    //     // 业务逻辑A (每次渲染都会触发)\n\n    //     // 返回一个函数记为B (卸载阶段)\n    //     return ()=>{\n    //     }\n    // })\n\n\n    // 根据一定的依赖条件来触发的副作用:传入回调函数,同时传入一个非空的数组\n    // useEffect(()=>{\n    //     // 这是回调函数的业务逻辑\n    //     // 若xxx 是一个函数,则xxx会在组件卸载的时候触发\n    //     return xxx\n\n    // },[\"\",\"\",\"\"])\n\n\n   \n\n\n\n\n\n\n    // useState 关联了一个状态\n    const [text,setText] = useState(\"初始文本\")\n    function changeText() {\n        setText(\"使用setText更改文本\");\n    }\n    return <div className=\"functionOne\">\n        <p>{text}</p>\n        <button onClick={changeText}>点我有惊喜</button>\n    </div>\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAEC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAC9C,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC;;EAEA;EACA;EACA;EACA;;EAGA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;;EAEA;;EAUA;EACA,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EACvC,SAASQ,UAAUA,CAAA,EAAG;IAClBD,OAAO,CAAC,eAAe,CAAC;EAC5B;EACA,oBAAOJ,OAAA;IAAKM,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC/BP,OAAA;MAAAO,QAAA,EAAIJ;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbX,OAAA;MAAQY,OAAO,EAAEP,UAAW;MAAAE,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AACV;AAACT,EAAA,CAzDuBD,WAAW;AAAAY,EAAA,GAAXZ,WAAW;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}